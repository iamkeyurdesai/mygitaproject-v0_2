b <- spectro(a[1:1e06], f = f, scale = FALSE)
b
str(b)
a
884.98*f
mysound <- readMP3("00 - Bhagavad-gita01.mp3.mp3")
myrate <- a@samp.rate
b <- spectro(mysound, f = mysound, scale = FALSE)
b <- spectro(mysound, f = myrate, scale = FALSE)
str(b)
b
str(a)
str(b)
a
summary(b)
View(b)
512/myrate
512/myrate*38112
length(b)
mygram <- b
(length(mygram$time)*myrate)/512
mytime <- 37
myix <- ((length(mygram$time) * myrate) / 512) * mytime
myix
mygram[myix]
mygram$amp[myix, ]
mytime <- 37
myix <- mytime / (512 / myrate)
myix
myix <- round(myix)
mygram$amp[myix, ]
str(mygram)
mygram$amp[, myix]
mytime <- 36/76
myix <- mytime / (512 / myrate)
myix <- round(myix)
myix
mytime <- 36.76
myix <- mytime / (512 / myrate)
myix <- round(myix)
myix
mygram$amp[, myix]
plot((1:256) * myrate / 512, mygram$amp[, myix])
mydetect <- mygram$amp[, myix]
cor(mygram$amp, mydetect)
(1:length(mygram$time)) * (512 / myrate)
max((1:length(mygram$time)) * (512 / myrate))
plot((1:length(mygram$time)) * (512 / myrate), mydetect)
plot((1:length(mygram$time)) * (512 / myrate), mycor)
mycor <- cor(mygram$amp, mydetect)
plot((1:length(mygram$time)) * (512 / myrate), mycor)
mycor_decide <- (mycor > 0.93) * mycor
mycor_decide
plot((1:length(mygram$time)) * (512 / myrate), mycor_decide)
library(tidyverse)
mydata$x <- (1:length(mygram$time)) * (512 / myrate)
mydata$y <- mycor_decide
mydata <- NULL
mydata$x <- (1:length(mygram$time)) * (512 / myrate)
mydata$y <- mycor_decide
mydata <- as_tibble(mydata)
mydata <- NULL
mydata$x <- (1:length(mygram$time)) * (512 / myrate)
mydata$y <- mycor_decide
mydata <- as_tibble(as.data.frame(mydata))
mydata
mydata <- NULL
mydata$x <- (1:length(mygram$time)) * (512 / myrate)
mydata$y <- mycor_decide
str(mydata)
mydata$y
ggplot(mydata, aes(x, y)) +
geom_point()
mydata <- NULL
mydata$x <- (1:length(mygram$time)) * (512 / myrate)
mydata$y <- mycor_decide
mydata <- as_tibble(as.data.frame(mydata))
ggplot(mydata, aes(x, y)) +
geom_point()
install.packages("plotly")
library(plotly)
library(plotly)
myg <- ggplot(mydata, aes(x, y)) +
geom_point()
ggplotly(myg)
mydata <- NULL
mydata$x <- (1:length(mygram$time)) * (512 / myrate)
mydata$y <- mycor_decide
mydata$z <- mycor
mydata <- as_tibble(as.data.frame(mydata))
myg <- ggplot(mydata, aes(x, z)) +
geom_point()
ggplotly(myg)
mygram$amp
mygram
mygram
plot(mygram)
spectro(mysound[1:5e06], f = myrate, scale = FALSE, osc = TRUE)
View(mygram)
mygram
mygram <- spectro(mysound[1:5e06], f = myrate, scale = FALSE)
mygram
xlim <- c(0.5, 0.9)
dfreq(mysound, myrate, at = seq(0.59, 0.85, by = 0.01), type = "o", xlim = xlim, main = "a measure every 10 ms")
myrate
data("tico")
str(tico)
dfreq(mysound, myrate, at = seq(0.59, 0.85, by = 0.01), type = "o", xlim = xlim, main = "a measure every 10 ms")
dfreq(mysound, myrate, at = seq(0.59, 0.85, by = 0.01)
)
dfreq(mysound, myrate)
mydomin <- dfreq(mysound, myrate)
str(mydomin)
mydomin[1:10,]
mydomin$y
mydomin[,2]
max(mydomin[,2])
max(mydomin[,2], na.rm = TRUE)
mydomin <- as_tibble(dfreq(mysound, myrate))
mydomin
mydomin %>%
mutate(y = ifelse(is.na(y), 0, y))
mydomin %>%
mutate(y = ifelse(is.na(y), 0, y)) %>%
mutate(z = abs(y - 0.8) < 0.02)
mydomin
mydomin1 <- mydomin %>%
mutate(y = ifelse(is.na(y), 0, y)) %>%
mutate(z = abs(y - 0.8) < 0.02)
mydomin1
table(mydomin1$z)
mydomin1 <- mydomin %>%
mutate(y = ifelse(is.na(y), 0, y)) %>%
mutate(z = abs(y - 0.8) < 0.01)
table(mydomin1$z)
mydomin1 <- mydomin %>%
mutate(y = ifelse(is.na(y), 0, y)) %>%
mutate(z = abs(y - 0.8) < 0.02)
table(mydomin1$z)
mydomin1 <- mydomin %>%
mutate(y = ifelse(is.na(y), 0, y)) %>%
mutate(z = abs(y - 0.8) < 0.02) %>%
mutate(y_thr = y * z)
mydomin1
myg <- mydomin1 %>%
ggplot(aes(x, y_thr)) +
geom_point()
ggplotly(myg)
mydata
str(mycor)
str(mygram)
mysound <- readMP3("00 - Bhagavad-gita01.mp3.mp3")
myrate <- a@samp.rate
mygram <- spectro(mysound, f = myrate, scale = FALSE)
mytime <- 36.76
myix <- mytime / (512 / myrate)
myix <- round(myix)
mydetect <- mygram$amp[, myix]
mycor <- cor(mygram$amp, mydetect)
mycor_decide <- (mycor > 0.93) * mycor
mydata <- NULL
mydata$x <- (1:length(mygram$time)) * (512 / myrate)
mydata$y <- mycor_decide
mydata$z <- mycor
mydata <- as_tibble(as.data.frame(mydata))
myg <- ggplot(mydata, aes(x, z)) +
geom_point()
ggplotly(myg)
myg <- ggplot(mydata, aes(x, y)) +
geom_point()
ggplotly(myg)
256*myrate/512
n_thr <- f_thr / myrate * 512
f_thr <- c(750, 850)
n_thr <- f_thr / myrate * 512
n_thr
512*100/myrate
f_thr <- c(750, 850)
n_thr <- f_thr / myrate * 512
n_thr <- c(floor(n_thr[1]), ceiling(n_thr[2]))
n_thr
mydetect
plot((1:length(mygram$time)) * (512 / myrate), mydetect)
(1:length(mygram$time)) * (512 / myrate)
str((1:length(mygram$time)) * (512 / myrate))
str(ngram)
str(mygram)
str((1:length(mygram$freq)) * (myrate / 512))
(0:length(mygram$freq) -1)
seq(0, length(mygram$freq) - 1, 1)
seq(0, length(mygram$freq) - 1, 1) * (myrate / 512)
plot(seq(0, length(mygram$freq) - 1, 1) * (myrate / 512), mydetect)
plot(seq(0, length(mygram$freq) - 1, 1) * (myrate / 512), mydetect, xlab = "Frequency")
myix <- myix - 3
mydetect <- mygram$amp[, myix]
plot(seq(0, length(mygram$freq) - 1, 1) * (myrate / 512), mydetect, xlab = "Frequency")
myix
mytime <- 35.76
myix <- mytime / (512 / myrate)
myix <- round(myix)
mydetect <- mygram$amp[, myix]
plot(seq(0, length(mygram$freq) - 1, 1) * (myrate / 512), mydetect, xlab = "Frequency")
mytime <- 30.76
myix <- mytime / (512 / myrate)
myix <- round(myix)
mydetect <- mygram$amp[, myix]
plot(seq(0, length(mygram$freq) - 1, 1) * (myrate / 512), mydetect, xlab = "Frequency")
mytime <- 36.76
myix <- mytime / (512 / myrate)
myix <- round(myix)
mydetect <- mygram$amp[, myix]
plot(seq(0, length(mygram$freq) - 1, 1) * (myrate / 512), mydetect, xlab = "Frequency")
mytime <- 37.76
myix <- mytime / (512 / myrate)
myix <- round(myix)
mydetect <- mygram$amp[, myix]
plot(seq(0, length(mygram$freq) - 1, 1) * (myrate / 512), mydetect, xlab = "Frequency")
mytime <- 36.76
myix <- mytime / (512 / myrate)
myix <- round(myix)
mydetect <- mygram$amp[, myix]
plot(seq(0, length(mygram$freq) - 1, 1) * (myrate / 512), mydetect, xlab = "Frequency")
mytime <- 37
myix <- mytime / (512 / myrate)
myix <- round(myix)
mydetect <- mygram$amp[, myix]
plot(seq(0, length(mygram$freq) - 1, 1) * (myrate / 512), mydetect, xlab = "Frequency")
f_thr <- c(750, 850)
n_thr <- f_thr / myrate * 512
n_thr <- c(floor(n_thr[1]), ceiling(n_thr[2]))
mydetect[n_thr]
mydetect[n_thr[1]:n_thr[2]]
f_thr <- c(700, 900)
n_thr <- f_thr / myrate * 512
n_thr <- c(floor(n_thr[1]), ceiling(n_thr[2]))
mydetect[n_thr[1]:n_thr[2]]
f_thr <- c(750, 950)
n_thr <- f_thr / myrate * 512
n_thr <- c(floor(n_thr[1]), ceiling(n_thr[2]))
mydetect[n_thr[1]:n_thr[2]]
mycor <- cor(mygram$amp[n_thr[1]:n_thr[2], ], mydetect[n_thr[1]:n_thr[2]])
mycor
mycor_decide <- (mycor > 0.93) * mycor
mydata <- NULL
mydata$x <- (1:length(mygram$time)) * (512 / myrate)
mydata$y <- mycor_decide
mydata$z <- mycor
mydata <- as_tibble(as.data.frame(mydata))
myg <- ggplot(mydata, aes(x, y)) +
geom_point()
ggplotly(myg)
mycor_decide <- (mycor > 0.96) * mycor
mydata <- NULL
mydata$x <- (1:length(mygram$time)) * (512 / myrate)
mydata$y <- mycor_decide
mydata$z <- mycor
mydata <- as_tibble(as.data.frame(mydata))
myg <- ggplot(mydata, aes(x, y)) +
geom_point()
ggplotly(myg)
mycor <- cor(mygram$amp[n_thr[1]:n_thr[2], ], mydetect[n_thr[1]:n_thr[2]], method = "spear")
mycor_decide <- (mycor > 0.99) * mycor
mydata <- NULL
mydata$x <- (1:length(mygram$time)) * (512 / myrate)
mydata$y <- mycor_decide
mydata$z <- mycor
mydata <- as_tibble(as.data.frame(mydata))
myg <- ggplot(mydata, aes(x, y)) +
geom_point()
ggplotly(myg)
mycor <- cor(mygram$amp[n_thr[1]:n_thr[2], ], mydetect[n_thr[1]:n_thr[2]])
mycor_decide <- (mycor > 0.99) * mycor
mydata <- NULL
mydata$x <- (1:length(mygram$time)) * (512 / myrate)
mydata$y <- mycor_decide
mydata$z <- mycor
mydata <- as_tibble(as.data.frame(mydata))
myg <- ggplot(mydata, aes(x, y)) +
geom_point()
ggplotly(myg)
mycor_decide <- (mycor > 0.996) * mycor
mydata <- NULL
mydata$x <- (1:length(mygram$time)) * (512 / myrate)
mydata$y <- mycor_decide
mydata$z <- mycor
mydata <- as_tibble(as.data.frame(mydata))
myg <- ggplot(mydata, aes(x, y)) +
geom_point()
ggplotly(myg)
mycor_decide <- (mycor > 0.994) * mycor
mydata <- NULL
mydata$x <- (1:length(mygram$time)) * (512 / myrate)
mydata$y <- mycor_decide
mydata$z <- mycor
mydata <- as_tibble(as.data.frame(mydata))
myg <- ggplot(mydata, aes(x, y)) +
geom_point()
ggplotly(myg)
n_thr
f_thr <- c(725, 975)
n_thr <- f_thr / myrate * 512
n_thr <- c(floor(n_thr[1]), ceiling(n_thr[2]))
mydetect[n_thr[1]:n_thr[2]]
mycor <- cor(mygram$amp[n_thr[1]:n_thr[2], ], mydetect[n_thr[1]:n_thr[2]])
mycor_decide <- (mycor > 0.994) * mycor
mydata <- NULL
mydata$x <- (1:length(mygram$time)) * (512 / myrate)
mydata$y <- mycor_decide
mydata$z <- mycor
mydata <- as_tibble(as.data.frame(mydata))
myg <- ggplot(mydata, aes(x, y)) +
geom_point()
ggplotly(myg)
mycor_decide <- (mycor > 0.99) * mycor
mydata <- NULL
mydata$x <- (1:length(mygram$time)) * (512 / myrate)
mydata$y <- mycor_decide
mydata$z <- mycor
mydata <- as_tibble(as.data.frame(mydata))
myg <- ggplot(mydata, aes(x, y)) +
geom_point()
ggplotly(myg)
table(mydata$y > 0.99)
myspec <- NULL
myspec$x <- seq(0, length(mygram$freq) - 1, 1) * (myrate / 512)
myspec$y <- mydetect
myspec <- as_tibble(as.data.frame(myspec))
myg <- ggplot(myspec, aes(x, y)) +
geom_point()
ggplotly(myg)
f_thr <- c(725, 925)
n_thr <- f_thr / myrate * 512
n_thr <- c(floor(n_thr[1]), ceiling(n_thr[2]))
mydetect[n_thr[1]:n_thr[2]]
mycor <- cor(mygram$amp[n_thr[1]:n_thr[2], ], mydetect[n_thr[1]:n_thr[2]])
mycor_decide <- (mycor > 0.99) * mycor
mydata <- NULL
mydata$x <- (1:length(mygram$time)) * (512 / myrate)
mydata$y <- mycor_decide
mydata$z <- mycor
mydata <- as_tibble(as.data.frame(mydata))
myg <- ggplot(mydata, aes(x, y)) +
geom_point()
ggplotly(myg)
mygram$amp[,500]
max(mygram$amp[,500])
n_thr
myspec$x
mygram$amp[20, ]
hist(mygram$amp[20, ])
mydata <- NULL
mydata$x <- (1:length(mygram$time)) * (512 / myrate)
mydata$y <- mygram[20, ]
mydata <- as_tibble(as.data.frame(mydata))
mydata <- mydata %>%
mutate(z = (y > -5) * y)
mydata <- NULL
mydata$x <- (1:length(mygram$time)) * (512 / myrate)
mydata$y <- mygram[20, ]
mydata <- as_tibble(as.data.frame(mydata))
mydata <- NULL
mydata$x <- (1:length(mygram$time)) * (512 / myrate)
mydata$y <- mygram$amp[20, ]
mydata <- as_tibble(as.data.frame(mydata))
mydata <- mydata %>%
mutate(z = (y > -5) * y)
myg <- ggplot(mydata, aes(x, z)) +
geom_point()
ggplotly(myg)
nrow(mydata):1
mydata <- mydata %>%
mutate(z = (y > -5) * y, z_lgc = y > -5, z_lgc_keep = z_lgc)
for(j in nrow(mydata):2) {
mydata$z_lgc_keep[j] = ifelse(mydata$z_lgc_keep[j-1], FALSE, mydata$z_lgc_keep[j])
}
table(mydata$z_lgc_keep)
myg <- ggplot(mydata, aes(x, z_lgc_keep)) +
geom_point()
ggplotly(myg)
mydata <- NULL
mydata$x <- (1:length(mygram$time)) * (512 / myrate)
mydata$y <- mygram$amp[20, ]
mydata <- as_tibble(as.data.frame(mydata))
mydata <- mydata %>%
mutate(z = (y > -5) * y, z_lgc = y > -3, z_lgc_keep = z_lgc)
for(j in nrow(mydata):2) {
mydata$z_lgc_keep[j] = ifelse(mydata$z_lgc_keep[j-1], FALSE, mydata$z_lgc_keep[j])
}
table(mydata$z_lgc_keep)
mydata <- NULL
mydata$x <- (1:length(mygram$time)) * (512 / myrate)
mydata$y <- mygram$amp[20, ]
mydata <- as_tibble(as.data.frame(mydata))
mydata <- mydata %>%
mutate(z = (y > -5) * y, z_lgc = y > -2, z_lgc_keep = z_lgc)
for(j in nrow(mydata):2) {
mydata$z_lgc_keep[j] = ifelse(mydata$z_lgc_keep[j-1], FALSE, mydata$z_lgc_keep[j])
}
table(mydata$z_lgc_keep)
mydata <- NULL
mydata$x <- (1:length(mygram$time)) * (512 / myrate)
mydata$y <- mygram$amp[20, ]
mydata <- as_tibble(as.data.frame(mydata))
mydata <- mydata %>%
mutate(z = (y > -2) * y, z_lgc = y > -2, z_lgc_keep = z_lgc)
for(j in nrow(mydata):2) {
mydata$z_lgc_keep[j] = ifelse(mydata$z_lgc[j-1], FALSE, mydata$z_lgc_keep[j])
}
table(mydata$z_lgc_keep)
mydata <- NULL
mydata$x <- (1:length(mygram$time)) * (512 / myrate)
mydata$y <- mycor_decide
mydata$z <- mycor
mydata <- as_tibble(as.data.frame(mydata))
for(j in nrow(mydata):2) {
mydata$y[j] = ifelse(mydata$y[j-1] > 0, 0, mydata$y[j])
}
myg <- ggplot(mydata, aes(x, y)) +
geom_point()
ggplotly(myg)
mydata <- NULL
mydata$x <- (1:length(mygram$time)) * (512 / myrate)
mydata$y <- mycor_decide
mydata$z <- mycor
mydata <- as_tibble(as.data.frame(mydata))
for(j in nrow(mydata):2) {
mydata$y[j] = ifelse(mydata$y[j-1] > 0, 0, mydata$y[j])
}
myg <- ggplot(mydata, aes(x, y)) +
geom_point()
ggplotly(myg)
512 / myrate
mydata <- NULL
mydata$x <- (1:length(mygram$time)) * (512 / myrate)
mydata$y <- mycor_decide
mydata$z <- mycor
mydata <- as_tibble(as.data.frame(mydata))
for(j in nrow(mydata):50) {
mydata$y[j] = ifelse(sum(c(mydata$y[j-49]:mydata$y[j-1]) > 0) > 0, 0, mydata$y[j])
}
mydata <- NULL
mydata$x <- (1:length(mygram$time)) * (512 / myrate)
mydata$y <- mycor_decide
mydata$z <- mycor
mydata <- as_tibble(as.data.frame(mydata))
for(j in nrow(mydata):50) {
mydata$y[j] = ifelse(sum(mydata$y[(j-49) : (j-1)] > 0) > 0, 0, mydata$y[j])
}
myg <- ggplot(mydata, aes(x, y)) +
geom_point()
ggplotly(myg)
table(mydata$y > 0)
warnings()
mydata
mytime <- 36.76
myix <- mytime / (512 / myrate)
myix <- round(myix)
mydetect <- mygram$amp[, myix]
myspec <- NULL
myspec$x <- seq(0, length(mygram$freq) - 1, 1) * (myrate / 512)
myspec$y <- mydetect
myspec <- as_tibble(as.data.frame(myspec))
myg <- ggplot(myspec, aes(x, y)) +
geom_point()
ggplotly(myg)
f_thr <- c(725, 925)
n_thr <- f_thr / myrate * 512
n_thr <- c(floor(n_thr[1]), ceiling(n_thr[2]))
mydetect[n_thr[1]:n_thr[2]]
mycor <- cor(mygram$amp[n_thr[1]:n_thr[2], ], mydetect[n_thr[1]:n_thr[2]])
mycor_decide <- (mycor > 0.99) * mycor
mydata <- NULL
mydata$x <- (1:length(mygram$time)) * (512 / myrate)
mydata$y <- mycor_decide
mydata$z <- mycor
mydata <- as_tibble(as.data.frame(mydata))
for(j in nrow(mydata):50) {
mydata$y[j] = ifelse(sum(mydata$y[(j-49) : (j-1)] > 0) > 0, 0, mydata$y[j])
}
table(mydata$y > 0)
myg <- ggplot(mydata, aes(x, y)) +
geom_point()
ggplotly(myg)
mydata$x(mydata$y > 0)
mydata$x[mydata$y > 0)]
mydata$x[mydata$y > 0]
mydata$x[which(mydata$y > 0)]
?write_tsv
mylabels <- NULL
mylabels$start <- mydata$x[which(mydata$y > 0)]
mylabels$end <- mylabels$start
mylabels$index <- 1:nrow(mylabels)
mylabels <- as_tibble(mylabels)
mylabels <- NULL
mylabels$start <- mydata$x[which(mydata$y > 0)]
mylabels$end <- mylabels$start
nrow(mylabels)
mylabels <- NULL
mylabels$start <- mydata$x[which(mydata$y > 0)]
mylabels$end <- mylabels$start
mylabels <- as_tibble(as.data.frame(mylabels))
mylabels$index <- 1:nrow(mylabels)
mylabels
write_tsv(mylabels, path = chap1_labels.txt, col_names = FALSE)
write_tsv(mylabels, path = "./chap1_labels.txt", col_names = FALSE)
getwd()
mysound
mysound
mysound
str(mysound)
mycor
mygram
